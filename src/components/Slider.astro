---
import imgCremaFresa from "@assets/dulce-crema-fresas-w600.webp";
import imgFresa from "@assets/dulce-fresa-w600.webp";
import dulceCanela from "@assets/dulce-canela-w600.webp";
import imgPina from "@assets/dulce-piña-w600.webp";
import { Image } from "astro:assets";
---

<div id="app"></div>

<div class="sliderContainer">
  <div class="slider">
    <Image src={imgCremaFresa} alt="dulce de crema de fresa" id="image1" />
    <Image src={imgFresa} alt="dulce de fresa" id="image2" />
    <Image src={imgPina} alt="dulce de piña" id="image3" />
    <Image src={dulceCanela} alt="dulce de canela" id="image4" />
  </div>
  <div class="dots">
    <a href="" aria-label="link dulce crema fresa"></a>
    <a href="" aria-label="link dulce fresa"></a>
    <a href="" aria-label="link dulce de piña"></a>
    <a href="" aria-label="link dulde de canela"></a>
  </div>
</div>

<script>
  const slides: HTMLElement =
    (document.querySelector(".slider") as HTMLElement) || HTMLElement;

  const slide1 = slides.children[0] as HTMLImageElement;
  const dots = document.querySelector(".dots");
  const dotsArray: HTMLElement[] = Array.from(
    dots?.children || [],
  ) as HTMLElement[];

  let index = 0;
  let scrollNumber: number = 0;

  // since every children have the same size
  // wait until the image1 fully load to take its width and set intervals
  slide1.addEventListener("load", () => {
    scrollNumber = (slides.children[0] as HTMLImageElement).offsetWidth;

    // Automatically change slides every 4 seconds
    let sliderIntervalId = setInterval(scrollToNextSlide, 2700);

    // adding interactivity to the dots
    dotsArray.forEach((dot, dotIdx) => {
      dot.addEventListener("click", (event) => {
        dotsArray[index].style.opacity = "0.55";
        clearInterval(sliderIntervalId);
        index = dotIdx - 1;
        scrollToNextSlide();

        sliderIntervalId = setInterval(scrollToNextSlide, 2700);
      });
    });
  });
  // if the image is already cached
  if (slide1.complete) {
    slide1.dispatchEvent(new Event("load"));
  }

  // Automatic slider
  function scrollToNextSlide() {
    //const slides: HTMLElement =
    //  (document.querySelector(".slider") as HTMLElement) || HTMLElement;
    //const scrollNumber = (
    //  document.querySelector(".sliderContainer") as HTMLElement
    //).offsetWidth;
    // null checking
    if (!slides) return;
    index = (index + 1) % slides.children.length; // Loop back to first slide

    //const scrollNumber = (slides.children[0] as HTMLImageElement).offsetWidth;
    const lastDot = index - 1 < 0 ? dotsArray.length - 1 : index - 1;
    dotsArray[lastDot].style.opacity = "0.55";
    dotsArray[index].style.opacity = "1";
    slides.scrollTo({
      left: index * scrollNumber, // Scroll to the next slide
      behavior: "smooth", // Smooth scrolling
    });
  }
</script>

<style>
  .sliderContainer {
    position: relative;
    max-width: 600px;
    width: 100%;
    /*height: 200px;*/
    aspect-ratio: 16/9;
  }
  .slider {
    display: flex;
    overflow: hidden;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;

    /*transition: translateX(-100%) 2s;*/
  }
  .slider img {
    object-fit: cover;
    width: 100%;
    height: 100%;
    border-radius: 10%;
    scroll-snap-align: center;
  }
  .dots {
    position: absolute;
    bottom: 3rem;
    /*left: 0%;*/
    z-index: 1;
    display: flex;
    gap: 1rem;
    justify-content: center;
    width: 100%;
  }

  .dots a {
    role: button;
    width: 1.5rem;
    height: 1.5em;
    /*background: white;*/
    opacity: 0.55;
    background: whitesmoke;
    border-radius: 50%;
  }
  .dots a:hover {
    opacity: 1;
  }
</style>
